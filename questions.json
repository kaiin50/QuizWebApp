[
  {
    "QuestionNumber": "2-1",
    "QuestionText": "アジャイルマニフェストで謳われている「アジャイルの価値観」において、適切なものを選びなさい。",
    "Options": [
      "1.動くソフトウェアがあれば、ドキュメントは必要ない。",
      "2.動くソフトウェアよりも包括的なドキュメントを重視する。",
      "3.ドキュメントよりも動くソフトウェアを重視する。",
      "4.動くソフトウェアよりも設計仕様を正確に記述することを重視する。"
    ],
    "Answer": "3",
    "Explanation": "1.アジャイル開発では、不要なドキュメントを極力排除することが望ましいですが、ドキュメントが不要とは謳っていないため、不正解です。\n2.包括的なドキュメントよりも動くソフトウェアを重視するため、不正解です。\n3.アジャイルソフトウェア開発宣言の4つの価値のうちの1つでは、包括的なドキュメントよりも動くソフトウェアを重視することが謳われているため、正解です。\n4.設計仕様を記述することよりも動くソフトウェアを重視するため、不正解です。"
  },
  {
    "QuestionNumber": "2-2",
    "QuestionText": "アジャイルソフトウェア開発の原則について、適切なものを選びなさい。",
    "Options": [
      "1.フェイス・トゥ・フェイスの対話が最も効率的なコミュニケーションの方法なので、積極的に対話を活用すべきである。",
      "2.チーム内での対話は、リスク回避に有用なため、会議の時間は多ければ多いほど好ましい。",
      "3.対話はスピード感があるが、正確性に欠けるため、ドキュメントベースの情報伝達にすべきである。",
      "4.対話は有効なコミュニケーション手段であるため、顧客との仕様調整には対話のスペシャリストを専任でアサインすべきである。"
    ],
    "Answer": "1",
    "Explanation": "1.アジャイル開発では、ドキュメントを介してではなく、チームメンバー同士が直接会話することによってコミュニケーションを行うことが最も効率的であるとされているため、正解です。\n2.チーム内での対話はリスク回避に有用ですが、会議を必要以上に設ける必要はないため、不正解です。\n3.ドキュメントを使って意図を伝達しようとすると、間違いや誤解が入る可能性があります。それよりも、顔を合わせて会話するほうが誤りなくコミュニケーションできると考えられるため、不正解です。\n4.対話が有効なコミュニケーション手段であることは間違いありませんが、専任でスペシャリストをアサインすることは謳われていないため、不正解です。"
  },
  {
    "QuestionNumber": "3-1",
    "QuestionText": "アジャイル開発チームのメンバーの役割について説明した文章で適切なものを選びなさい。",
    "Options": [
      "1.プロダクトオーナーは、利害関係者(ステークホルダー)からの製品への要望については全て受け入れて実現する。",
      "2.イテレーションにおける進捗の把握は、チームリーダーの責務である。",
      "3.開発チームは、チームリーダーの指示どおりに動く。",
      "4.チームリーダーは、チームの弱点を理解し、チームメンバーが最大限の能力を発揮できるように支援しなければならない。"
    ],
    "Answer": "4",
    "Explanation": "1.プロダクトオーナーは、開発する製品に関する明確なビジョンを持ち、それを開発チームや利害関係者に伝える役割があります。各利害関係者からの要望については、ビジョンに沿っているか、価値があるかどうかを優先順位付けしてから判断します。不正解です。\n2.イテレーションにおけるタスクの進捗については、アジャイル開発チーム全員が把握する必要があります。不正解です。\n3.アジャイル開発チームは、自律して動く自己組織化されたチームです。不正解です。\n4.チームリーダーは支援型リーダーと呼ばれ、アジャイル開発チームが自律して動くようチームへ助言や支援を行います。正解です。"
  },
  {
    "QuestionNumber": "3-2",
    "QuestionText": "アジャイル開発チームのチーム編成について説明した文章で適切なものを選びなさい。",
    "Options": [
      "1.プロダクトオーナーはアジャイルチームとは異なる顧客側組織のメンバーであるため、アジャイル開発チームと定期的にコミュニケーションをとるための会議体を調整する。",
      "2.アジャイル開発チームは、いつでもフェイス･トゥ･フェイスで会話できるよう、仕切りのない部屋で作業を行うことが望ましい。",
      "3.アジャイル開発のメンバーには相当のスキルと経験が求められるので、経験の浅い人間は最初から排除すべきである。",
      "4.チームリーダーは、開発チームの納期を守るためにチームメンバーに的確な指示を行う必要がある。"
    ],
    "Answer": "2",
    "Explanation": "1.プロダクトオーナーもアジャイルチームのメンバーの一員です。不正解です。\n2.アジャイル開発チームはいつでもコミュニケーションができるように、仕切りのない部屋で作業を行えるのが望ましい環境です。正解です。\n3.アジャイル開発のメンバーには、基本的なアジャイル開発の知識や開発スキルが求められますが、他のメンバーとのコミュニケーションにより、不足する知識やスキルを実践の中で向上していくのが現実的です。不正解です。\n4.チームリーダーは、指示型リーダーではなく、チームの自己組織化を促す支援型リーダーです。不正解です。"
  },
  {
    "QuestionNumber": "3-3",
    "QuestionText": "プロジェクトのインセプション(初期作業)について適切なものを選びなさい",
    "Options": [
      "1.プロジェクトで実行するタスクを洗い出し、最初のイテレーションの計画を実施する。",
      "2.開発に利用する技術の選定や開発環境の準備は、イテレーションの中で決めていけばよい。",
      "3.開発チームは多様で優秀な人材が集まっているため、最初からプロジェクトの目的や背景の認識は合わせなくてもよい。",
      "4.プロジェクトの予算や時間、品質などに制約があるため、何を優先し、何を実施しないか、優先順位付けに必要な考え方を開発チーム、プロダクトオーナー、利害関係者の間で合意しておく。"
    ],
    "Answer": "4",
    "Explanation": "1.アジャイルプロジェクトの初期作業として、実現する価値やゴールの共有や方針を明らかにし、共有します。タスクの洗い出しはイテレーション計画会議で行います。不正解です。\n2.プロジェクトの初期作業として、開発に利用する技術の選定や開発環境の準備をしておく必要があります。不正解です。\n3.多様な人材が集まっている場合、最初に、プロジェクトの目的や背景の認識を合わせておく必要があります。不正解です。\n4.プロジェクトには、コスト、品質、時間、スコープなどに制約があるため、事前に優先順位の考え方を開発チーム、プロダクトオーナー、利害関係者の間で合意しておく必要があります。正解です。"
  },
  {
    "QuestionNumber": "3-4",
    "QuestionText": "アジャイル開発のイテレーション(反復)について説明した文章で適切なものを選びなさい。",
    "Options": [
      "1.イテレーション計画会議で計画した実施予定のタスクが終了しなければ、プロダクトオーナーと協議の上、イテレーションの期間を延長してもよい。",
      "2.アジャイル開発は変化を受け入れるというコンセプトなので、イテレーションの期間中にストーリーの追加や変更を受け入れるべきである。",
      "3.イテレーションは、短ければ短いほど効果的である。",
      "4.イテレーションの目的はビジネス価値の探索であるので、イテレーションの最後に動作する成果物をビジネスの関係者にレビューする必要がある。"
    ],
    "Answer": "4",
    "Explanation": "1.イテレーションは固定期間とし、実施予定のストーリーが全て終了しない場合でも、イテレーションの期間を延長することはありません。また、未完了のタスクを次のイテレーションにやみくもに持ち越すことは得策ではなく、イテレーションの期間中にタスクの完成の目途が立たない場合、タスクの分割や実現するレベルの調整についてプロダクトオーナーと相談します。不正解です。\n2.イテレーションの実施途中でのストーリーの変更は受け入れません。次のイテレーションを始める前のイテレーション計画会議で、追加変更されたストーリーを含めた優先順位付けを再度行い、次のイテレーションで実施可能かを判断します。不正解です。\n3.イテレーションの期間は1週間から4週間と言われています。動作する成果物を作成するのに必要な作業(計画、分析、設計、実装、テスト)をイテレーション期間内で実際に行えるかどうかはチームの能力に依存するので、フィードバックを行うのに適切なイテレーション期間を設けるべきです。不正解です。\n4.イテレーション計画では、そのイテレーションにおける成果物が実現する価値を明確にします。イテレーションのレビューでは、プロダクトオーナーと利害関係者が、成果物を実際に動作させることにより、価値あるものかどうかを評価します。正解です。"
  },
  {
    "QuestionNumber": "3-5",
    "QuestionText": "アジャイル開発の会議体に関する説明のうち正しいものを選びなさい。",
    "Options": [
      "1.イテレーションに先立って実施するイテレーション計画会議では、プロダクトオーナーや開発チームをはじめとする利害関係者が集まり、次のイテレーション内で実現するストーリーを選択する。",
      "2.スタンドアップミーティングの中で、毎日の作業で起こる問題点を共有し、解決策が出るまで話し合う。",
      "3.イテレーション計画会議は、毎日、計画の見直しのために実施すべきである。",
      "4.イテレーションのレビュー会議では、イテレーションが終わったあとで、チームの運営やツール、コミュニケーションなど様々な観点からの振り返りを行う。"
    ],
    "Answer": "1",
    "Explanation": "1.イテレーションに先立って実施されるイテレーション計画会議の前半では、プロダクトオーナー、開発チームをはじめとする利害関係者が集まり、次のイテレーションの目標を決定し、実現する機能をストーリー一覧から選択します。正解です。\n2.スタンドアップミーティングは、短時間で進捗予定や問題を共有する会議です。個別の問題の対策については話し合いに時間がかかるため、別途の機会を設定します。不正解です。\n3.イテレーション計画会議は、イテレーションの最初にイテレーション内で実現するストーリーの実現に必要なタスクを洗い出します。不正解です。\n4.チームの運営やツール、コミュニケーションなどの様々な観点から改善方法を検討し、次のイテレーションで実行する改善項目を決めるのは、イテレーションのレビュー会議ではなくイテレーションの振り返りです。不正解です。"
  },
  {
    "QuestionNumber": "3-6",
    "QuestionText": "イテレーション計画会議について適切なものを選びなさい。",
    "Options": [
      "1.イテレーション計画会議は、大まかなプロジェクトのリリース計画を作成するもので、詳細レベルのタスクについては計画しない。",
      "2.イテレーション計画会議が終わったら、すぐにイテレーションの振り返りを実施する。",
      "3.イテレーション計画会議では、イテレーションで実現すべき成果物の作成に必要なストーリーの一覧を決定する。その後ストーリーを分析しながら、タスクレベルの項目に詳細化する。",
      "4.プロジェクト開始時点で全イテレーションの計画を立てる。変更が必要になった場合、都度イテレーション計画会議を開催できる。"
    ],
    "Answer": "3",
    "Explanation": "1.イテレーション計画会議では、次のイテレーションの成果物のゴールを明確にし、ストーリーをタスクに分割することで、何をどこまで実施するか明確にします。不正解です。\n2.イテレーション計画会議はイテレーションの開始時に行います。イテレーションの最後にイテレーションのレビュー会議を実施し、その後にイテレーションの振り返りを実施します。不正解です。\n3.イテレーション計画会議の前半では、プロダクトオーナー、利害関係者、開発チーム、チームリーダーが集まり、次のイテレーションで実現すべき成果物となるストーリーの一覧を決定します。後半では、開発チームとチームリーダーでストーリーを分析し、タスクレベルの項目に分割します。正解です。\n4.イテレーション計画会議はイテレーションの開始時に行い、該当のイテレーションのタスクを洗い出します。不正解です。"
  },
  {
    "QuestionNumber": "3-7",
    "QuestionText": "アジャイル開発プロジェクトにおける計画作りについて適切でないものを選びなさい。",
    "Options": [
      "1.計画はストーリーとその優先順位をもとに立案する。",
      "2.タスク単位の計画はイテレーション計画時に立案する。",
      "3.作成した綿密な計画を遅延なく完遂することが、プロジェクトの成功の証である。",
      "4.顧客のビジネス環境の変化によって新たに必要なストーリーが発生した場合や、すでにリストアップされているストーリーの価値に変化が生じた場合、計画を何度でも見直す。"
    ],
    "Answer": "3",
    "Explanation": "1.計画の根拠になるのは、ストーリー(価値)とその優先順位です。正しい内容なので不正解です。\n2.イテレーション計画立案時にストーリーをタスクに分解して計画します。正しい内容なので不正解です。\n3.作成した計画(手段)を完遂することが目的ではなく、価値を実現するための手段として計画を活用します。正解です。\n4.状況の変化が発生した場合はその変化を積極的に受け入れ、躊躇なく何度でも計画を見直します。正しい内容なので不正解です。"
  },
  {
    "QuestionNumber": "3-8",
    "QuestionText": "ストーリーポイントを付与する際に注意すべき点で適切なものを選びなさい。",
    "Options": [
      "1.ストーリーはなるべく類似のものを集めて、できるだけ大きな塊にして見積もる。",
      "2.プロジェクト全体の計画時から詳細なタスク単位での見積りを行う。",
      "3.ストーリーを実現するのに必要な作業全てを含めて付与する。",
      "4.リーダーや顧客など特定の立場の人が1人で見積もる。"
    ],
    "Answer": "3",
    "Explanation": "1.ストーリーポイントが大きすぎる時は、ストーリーの分割を行います。不正解です。\n2.プロジェクト全体計画時には詳細の見積りは行わず、イテレーション計画でタスク分解した際に行います。不正解です。\n3.ストーリーを実現するのに必要な作業全てを含めて付与します。特にドキュメント作成が必要な場合も忘れずに含めることが重要です。正解です。\n4.チーム全員で多角的な視点から見積もります。不正解です。"
  },
  {
    "QuestionNumber": "3-9",
    "QuestionText": "アジャイルにおける品質の確保について適切でないものを選びなさい。",
    "Options": [
      "1.不良を素早く発見して素早く取り除くことを継続して繰り返し、不良のない状態を維持する。",
      "2.イテレーションの成果物の品質レベルは、イテレーション開始時に顧客と合意しておく必要がある。",
      "3.進捗を計画どおりに進めることが品質管理的に重要であるため、多少の残業はやむをえない。",
      "4.アジャイルの品質確保に有効な代表的プラクティスの1つに常時結合がある。"
    ],
    "Answer": "3",
    "Explanation": "1.そのための手段として代表的なものが常時結合です。正しい内容なので不正解です。\n2.ストーリーごとに求められる品質レベルは異なることもあるので、顧客と合意しておくことは重要です。正しい内容なので不正解です。\n3.全メンバーがベストパフォーマンスを発揮し続けられるような持続可能なペースを維持することも、品質向上には重要な要素です。正解です。\n4.他にも、ペアプログラミングやリファクタリングなどが挙げられます。正しい内容なので不正解です。"
  },
  {
    "QuestionNumber": "3-10",
    "QuestionText": "アジャイルでのドキュメント作成について適切なものを選びなさい。",
    "Options": [
      "1.動くプログラムさえ完成すれば、その設計根拠となったドキュメントは不要である。",
      "2.DB設計書は保守に必要なので、リリース後の最新状態のものをツールを使って自動生成した。",
      "3.コーディングルールなどはそれぞれのプログラマの個性を活かすため、あえて作成しなかった。",
      "4.保守・運用に必要な情報は全て口頭で伝えたので、ドキュメントは作成しなかった。"
    ],
    "Answer": "2",
    "Explanation": "1.状況の変化により機能変更や追加が発生しても対応できるように設計根拠となるドキュメントは必要です。不正解です。\n2.最新の情報を漏れなく記録することが目的なので、ツールなどを最大限活用して作成するのは良いことです。正解です。\n3.複数人で作業する場合、守るべきルールは明文化しておくことが重要です。不正解です。\n4.保守・運用は長期間にわたる場合や、担当者の変更などが行われることもあるため、ドキュメントとして作成する必要があります。不正解です。"
  },
  {
    "QuestionNumber": "4-1",
    "QuestionText": "アジャイルチーム内でのコミュニケーションのあり方について、適切なものを選びなさい。",
    "Options": [
      "1.チームの他のメンバーの作業の邪魔にならないように、コミュニケーションは、チャットやツールを多用する。",
      "2.チーム内でのコミュニケーションは、全員が本音で会話できる環境をチーム全上員で心がける。",
      "3.コミュニケーションをとる時間は開発作業にとって無湊な時間なので、できるだけ少なくするために、リーダーはチームメンバーが迷わないように事前に明確な指示を出し、役割分担を決める。",
      "4.チーム内でのコミュニケーションは、仲間としての連帯感を高める良い手段なので、お互いに納得できるまで時間をかけて行うべきである。"
    ],
    "Answer": "2",
    "Explanation": "1.アジャイルマニフェストにも書かれているように、コミュニケーションの基本はフェイス・トゥ・フェイスです。不正解です。\n2.チーム内では、メンバーが互いに本音でコミュニケーションをすることが大事です。このような本音で会話できる環境は、リーダーや特定の誰かが環境整備をするものではありません。メンバーそれぞれが本音で会話できる環境を作る努力が必要です。正解です。\n3.コミュニケーションの時間は決して無駄な時間ではありません。不正解です。\n4.コミュニケーションにはチームとしての連幕感を高める効果もありますが、無制限に時間を費やすのは無駄です。振り返りの場で、どうしたら効率的にかつ効果的にコミュニケーションが図れるか短時間でできる方策をチームとして考えるベきです。不正解です。"
  },
  {
    "QuestionNumber": "4-2",
    "QuestionText": "次の説明文の中で自律したチームの行動を表した文章として適切でないものを選びなさい。",
    "Options": [
      "1.このチームは、ちょうどラグビーチームのように、作業期間(イテレーション)の中ではチーム全員が協働して、自分たちで問題や課題への対応を考えて対処している。",
      "2.このチームは、適宜管理者への報連相(報告・運絡・相談)を行い、効率的に作業を進めている。",
      "3.このチームは、メンバーそれぞれの専門分野の知識を教え合い、全員が等しく専門分野にとらわれず作業を進めている。",
      "4.このチームは、見える化を徹底し、プロジェクトに必要な全ての情報が壁に貼られており、作業進捗の透明性が高い。"
    ],
    "Answer": "2",
    "Explanation": "1.開発作業(イテレーション)が始まれば、イテレーションの完了まで、アジャイルチームはチーム内で起こる全ての事象に対して自分たちで意思決定を行い、対処します。正しい内容なので不正解です。\n2.上述のとおり、イテレーション期間内で起こる事象、問題、課題などはチームの中で解決するのが基本です。自分たちではどうしても解決できない事象についてのみ、管理者へ解決を依頼します。この依頼するという意思決定は、チームが行います。したがって、適宜管理者へ報連相をするということではありません。正解です。\n3.アジャイルチームではメンバー全員が等しく作業を分かち合い、全員が同等の作業を実行します。よく専門分野でタスクを割り振ったり、仕事の内容で振り分けたりしているケースを見かけますが、これは自律したアジャイルチームの姿ではありません。自律したチームは、自分たちでメンバーそれぞれのスキルや知識を把握管理し、互いに教え合うことで、全員が等しく作業できるように行動します。正しい内容なので不正解です。\n4.自律したアジャイルチームは、自分たちでプロジェクトや作業の進捗も管理しています。例えば、プロジェクトルームの壁に貼られた各種ボードなどを活用して、自分たちの足元(現在位置)を正しく把握します。したがって、自律したチームのプロジェクト進捗の透明性は大変高くなります。正しい内容なので不正解です。"
  },
  {
    "QuestionNumber": "4-3",
    "QuestionText": "なかなか全員が守ることのできないチームの規約があります。次の中でチームがとるべき対応策として適切なものを選びなさい。",
    "Options": [
      "1.少し気を付ければ誰でも守れる規約なので、リーダーが翌日のスタンドアップミーティングで全員に注意を促した。",
      "2.全員が守れていないので、振り返りの場で提案し、規約から削除することにした。",
      "3.なぜ守ることができないのか、振り返りの場でKPTを作成して全員で対策(Try)を考え、次週全員で取り組むことにした。",
      "4.少し気を付ければ誰でもできることなので、もう少し様子見ることにした。"
    ],
    "Answer": "3",
    "Explanation": "1.チームの規約の表現で「気を付ける]といった項目は、各自の意識の問題とすり替えられて、実行できているかを互いに認め合うことが困難です。チームの規約は、できるだけ他人が傍から見ても実行しているかわかるように「とるべき行動]で表現します。少し気を付ければ守れるので注意を促すというのは、各自の意識に任せるということになります。これでは、規約を守ることを徹底するのは困難です。不正解です。\n2.守られない規約を振り返りで検討するのは大事なことですが、守られない原因の追究や検討をせずにただ守れないから削除するのでは、振り返りをしたことにはなりません。不正解です。\n3.振り返りの場で、KPTなどで原因を検討し、対策案を考えて再度挑戦をすることが大事です。削除するかどうかは、この再度の挑戦を実施したのちに再び振り返ってから判断します。正解です。\n4.もう少し様子を見るということは、何も手を打たないという意味であり、時間の浪費になります。不正解です。"
  },
  {
    "QuestionNumber": "4-4",
    "QuestionText": "次の中で、振り返りを実施するタイミングとして適切なものを選びなさい。",
    "Options": [
      "1.振り返りはチームの誰かが問題を感じたら、リーダーに提案して実施する。",
      "2.振り返りはイテレーションのレビュー会議とセットで実施すると効果的なので、イテレーションの最後に必ず実施する。",
      "3.振り返りはイテレーションの期間と関係なく毎週日時を決めて、定期的に実施する。",
      "4.振り返りを実施した時に、次回の振り返りの日時を全員で話し合って決める。"
    ],
    "Answer": "3",
    "Explanation": "1.振り返りは思いついて実施するものではありません。定期的に日時を決めて実施します。不正解です。\n2.振り返りは何のために実施するのか、その本質を考えてください。振り返りは、プロダクトを対象に実施するものではありません。チーム内で発生する全ての事象が対象なので、イテレーションレビュー会議とセットにする必要もありません。不正解です。\n3.振り返りはアジャイルチームが成長するためのプラクティスです。チーム内で起こる全ての事象を対象とするので、自身の行動やチームの行動を覚えている範囲内で定期的に実施することが重要です。一般的には、毎週日時を決めて実施します。人間はそれほど長い期間の自身の行動を思い出すことはできないので、週に1回程度のサイクルは適切です。正解です。\n4.振り返りは定期的に日時を決めて実施することが重要です。不正解です。"
  },
  {
    "QuestionNumber": "5-1",
    "QuestionText": "ペアプログラミングの説明で、適切なものを選びなさい。",
    "Options": [
      "1.ペアプログラミングでは、ドライバーはナビゲータの指示に従いソースコードを作成するため、自身でソースコードの設計を行わない",
      "2.ペアを頻築に換えると対象の機能こついての情報を何度もキャッチアップする必要があるため、1つの機能を完成させるまではベアを変更すべきではない。",
      "3.スキル不足のメンバーには有効な開発手法であるが、高スキルのメンバーにとっては生産性を下げる開発手法であるため、一定のスキルを持つチームには採用する必要はない。",
      "4.ベアプログラミングを実行する際には休憩をこまめに取得させるようなルールも検討すべきである。"
    ],
    "Answer": "4",
    "Explanation": "1.ドライバーも設計を行います。互いに設計を行い議論することでソフトウェアの品質が高まります。不正解です。\n2.ペアも、1日ごとなど定期的に換えることが推奨されています。複数の担当者が担当することで、問題に対するより良い解決策が見つかることがあります。不正解です。\n3.ペアプログラミングのメリットはスキルアップのみではありません。コードの属人化防止などもあります。不正解です。\n4.ペアプログラミングは非常に神経がすり減る作業です。常にレビューし、レビューされている状況になるため、目の前のソースコードから気が抜けません。また、互いの見解が異なる場合は、互いを尊重しつつ認識の違いを埋めていくことになるため、精神的にもちエネルギーを使います。そのため、休憩をこまめにとるように初めからルール化しておき、集中力が持続しやすい環境を整えることが推奨されます。正解です。"
  },
  {
    "QuestionNumber": "5-2",
    "QuestionText": "リファクタリングについて、適切なものを選びなさい。",
    "Options": [
      "1.リファクタリングはアジャイル開発のための手法で、ウォーターフォール開発では実施しない。",
      "2.リファクタリングは特定のタイミングでまとめて実施するほうがよい",
      "3.テストコードが存在しないレガシーコードをリファクタリングすることはリスクが高いため、リファクタリングすべきではない。",
      "4.リファクタリングのメリットの対象にはユーザも含まれる。"
    ],
    "Answer": "4",
    "Explanation": "1.アジャイル開発のみの手法ではなく、従来の開発手法でも実施されているプラクティスです。不正解です。\n2.リファクタリングは、機能改修のタイミングやバグフィックスのタイミングなど機会があれば、実施すべきかどうか常に検討すべきプラクティスです。まとめてリファクタリングを行うことは非常に難易度が高く、デグレードが発生する可能性が高くなります。不正解です。\n3.テストコードがないレガシーコードの場合は、テストコードを作成することで安全にリファクタリングを行える状態を作ります。不正解です。\n4.ソースコードの改善は、不具合の減少や保守開発の工数削減、機能拡張の容易化によるリリースの短縮化など、ユーザも間接的にメリットを受けることができます。正解です。"
  },
  {
    "QuestionNumber": "5-3",
    "QuestionText": "常時結合について、適切なものを選びなさい。",
    "Options": [
      "1.常時結合の目的は、素早いフィードバックを受けることにある。",
      "2.常時結合の目的は、ユーザに素早く繰り返しソフトウェアを提供することである。",
      "3.常時結合の目的は、ソースコードの内部構造の改善にある。",
      "4.常時結合の目的は、様々なツールを使用し、開発の生産性を高めることにある。"
    ],
    "Answer": "1",
    "Explanation": "1.常時結合の目的は、素早いフィードバックを受けることです。それぞれの開発者のローカル環境ではテストを通っても、いさ各々のソースコードを結合してみると、通信の疎通すらできないことが多々あります。また、単体ケストレベルでは見つからなかった機能の認識違いなども結合テストでは見つかることがあるため、素早いフィードバックが求められます。正解です。\n2.常時結合のスコープには、ユーザへの機能提供(リリース)までは含まれていません。不正解です。\n3.内部構造の改善は、リファクタリングが目的とすることです。不正解です。\n4.テストコードが不可欠なため、当然コーディング量も大きく増加します。常時結合のメリットを考えると、機能修正や保守開発時の生産性が高くなることも場合によってはありますが、一般的には開発の生産性は上がらないと考えられます。不正解です。"
  },
  {
    "QuestionNumber": "5-4",
    "QuestionText": "テスト駆動開発について、適切なものを選びなさい。",
    "Options": [
      "1.テスト駆動開発は、漏れなく網羅的にテストを実施するためのテスト方法である。",
      "2.テスト駆動開発のテストスコープはホワイトボックステストであり、プラックボックステストをスコープに入れるべきではない。",
      "3.テスト駆動開発では、テストコードとソースコードを同じ人が作成する。",
      "4.テストコードによってソースコードの内部構造を設計するため、一度に多くのテストコードを作成したほうが設計の効率が良い。"
    ],
    "Answer": "3",
    "Explanation": "1.テスト駆動開発は、テスト手法ではなく開発手法であり、綱護的なテストを目的とするものではありません。不正解です。\n2.機能の振る舞いをテストで方向付けるため、ブラックボックステストもスコープに入ります。不正解です。\n3.テストコードを作成した時点では、ソースコードは動かない状態(RED)です。[動くきれいな]ソースコードを保つには、テストを追加したあとで必ずソースコードに手を加える必要があるため、テストコードを追加した人がソースコードも作成します。正解です。\n4.少しずつ段階的にテストコードを追加することにより、ソースコードの設計が洗練されていきます。一度に多くのテストコードを追加すると、ソースコードをテストに通すだけで精一杯となり、洗練された設計のソースコードを作成できなくなります。不正解です。"
  }
]
